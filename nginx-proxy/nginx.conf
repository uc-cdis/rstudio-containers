#user  nginx;
worker_processes  1;

error_log  /dev/stdout warn;
pid        /var/run/nginx.pid;

load_module modules/ngx_http_perl_module.so;
load_module modules/ngx_http_js_module.so;
load_module modules/ngx_http_headers_more_filter_module.so;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log  /dev/stdout;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # see https://support.rstudio.com/hc/en-us/articles/227449427-Running-RStudio-Connect-with-a-Proxy
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen       7780;
        server_name  reverse-proxy;

        # resolver kube-dns.kube-system.svc.cluster.local ipv6=off;
        # resolver 127.0.0.11;

        #
        # Accomodate large jwt token headers
        # * http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size
        # * https://ma.ttias.be/nginx-proxy-upstream-sent-big-header-reading-response-header-upstream/
        #
        proxy_buffer_size          16k;
        proxy_buffers              8 16k;
        proxy_busy_buffers_size    32k;
        #
        # also incoming from client:
        # * https://fullvalence.com/2016/07/05/cookie-size-in-nginx/
        # * https://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_buffer_size
        large_client_header_buffers 4 8k;
        client_header_buffer_size 4k;

        location = /_proxy_status {    
            default_type application/json;
            set $upstream http://localhost;
            return 200 "{ \"message\": \"Fealin good!\" }\n";
        }

        # see https://support.rstudio.com/hc/en-us/articles/227449427-Running-RStudio-Connect-with-a-Proxy
        location IN_PREFIX {
            proxy_pass http://localhost:APP_PORTAPP_PREFIX;
            proxy_redirect APP_PREFIX IN_PREFIX;
            proxy_set_header    X-RSC-Request $scheme://$host:$server_port$request_uri;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_http_version 1.1;
            proxy_buffering off;
        }

        location / {
          return 302 IN_PREFIX;
        }
    }
}
